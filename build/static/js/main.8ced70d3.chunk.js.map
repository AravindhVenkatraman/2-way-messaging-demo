{"version":3,"sources":["components/Login.js","components/ChatEngine.js","components/StreamChatApp.js","components/App.js","index.js"],"names":["Login","useState","username","setUsername","password","setPassword","chatComponent","setChatComponent","error","setError","e","a","preventDefault","authObj","axios","get","headers","result","console","log","localStorage","setItem","window","location","reload","removeItem","useEffect","className","type","onClick","onSubmit","placeholder","value","onChange","target","ChatEngineIO","height","projectID","userName","getItem","userSecret","chatClient","StreamChat","getInstance","user","id","name","image","connectUser","devToken","channel","members","StreamChatApp","Chat","client","theme","Channel","Window","ChannelHeader","MessageList","MessageInput","Thread","App","logout","href","component","JSON","parse","ChatEngine","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ced70d3.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst Login = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [chatComponent, setChatComponent] = useState(0);\r\n    const [error, setError] = useState('');\r\n    const chatComponents = [\r\n        'Chat-Engine',\r\n        'Stream-Chat',\r\n        'React-chat-elements',\r\n        '@chatscope/chat-ui-kit-react'\r\n    ]\r\n\r\n    useEffect(() => {\r\n        setUsername('');\r\n        setPassword('');\r\n        setError('');\r\n    }, [chatComponent]);\r\n    async function handleSumbit(e) {\r\n        e.preventDefault();\r\n        const authObj = {\r\n            'project-ID': '752ebb48-8f33-4e0d-9069-68579c1bfa6a',\r\n            'user-Name': username,\r\n            'user-Secret': password\r\n        }\r\n\r\n        try {\r\n            if(chatComponent === 0) {\r\n                let result = await axios.get('https://api.chatengine.io/chats', { headers: authObj });\r\n                console.log(\"axios result :: \", result);\r\n            }\r\n            if(chatComponent === 1) {\r\n                console.log(\"axios result :: \", chatComponent);\r\n            }\r\n            if(chatComponent === 2) {\r\n                console.log(\"axios result :: \", chatComponent);\r\n            }\r\n            if(chatComponent === 3) {\r\n                console.log(\"axios result :: \", chatComponent);\r\n            }\r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('password', password);\r\n            localStorage.setItem('component', chatComponent);\r\n            window.location.reload();\r\n        } catch (error) {\r\n            localStorage.removeItem('username');\r\n            setError('Invalid Credentials')\r\n            console.log(error);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='header'>\r\n                <button type='button'\r\n                        className='component'\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setChatComponent(0);\r\n                        }}\r\n                >\r\n                    rect-chat-engine\r\n                </button>\r\n                <button type='button'\r\n                        className='component'\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setChatComponent(1);\r\n                        }}>stream-chat</button>\r\n                <button type='button'\r\n                        className='component'\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setChatComponent(2);\r\n                        }}\r\n                >\r\n                    react-chat-elements\r\n                </button>\r\n                <button type='button'\r\n                        className='component'\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setChatComponent(3);\r\n                        }}\r\n                >\r\n                    @chatscope/chat-ui-kit-react\r\n                </button>\r\n            </div>\r\n            <div className='loginForm'>\r\n                <form onSubmit={handleSumbit}>\r\n                    <h3 className='formElement'>{chatComponents[chatComponent]} Login</h3>\r\n                    <h5 className='error'>{error}</h5>\r\n                    <div className='formElement'>\r\n                        <input className='input' type='text' placeholder='Username' value={username} onChange={(e) => setUsername(e.target.value)} />\r\n                    </div>\r\n                    <div className='formElement'>\r\n                        <input className='input' type='password' placeholder='Password' value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                    </div>\r\n                    <div className='formElement loginButton'>\r\n                        <button className='btn' type='submit'>Log In</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { ChatEngine } from 'react-chat-engine';\r\n\r\nconst ChatEngineIO = () => {\r\n    return (\r\n        <ChatEngine \r\n          height=\"100vh\"\r\n          projectID=\"752ebb48-8f33-4e0d-9069-68579c1bfa6a\"\r\n          userName={localStorage.getItem('username')}\r\n          userSecret={localStorage.getItem('password')}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ChatEngineIO;","import React from 'react';\r\nimport { StreamChat } from 'stream-chat';\r\nimport { Chat, Channel, ChannelHeader, MessageInput, MessageList, Thread, Window } from 'stream-chat-react';\r\n\r\nimport 'stream-chat-react/dist/css/index.css';\r\n\r\nconst chatClient = StreamChat.getInstance('ajsqerfrf2rc');\r\nconst user = {\r\n  id: 'Aravindh',\r\n  name: 'Aravindh',\r\n  image: 'https://getstream.io/random_png/?id=bitter-pond-3&name=bitter-pond-3',\r\n}\r\nchatClient.connectUser(\r\n  user,\r\n  chatClient.devToken(user.id)\r\n);\r\n\r\nconst channel = chatClient.channel('messaging', 'custom_channel_id', {\r\n  // add as many custom fields as you'd like\r\n  image: 'https://www.drupal.org/files/project-images/react.png',\r\n  name: 'Talk about React',\r\n  members: ['rough-shadow-6'],\r\n});\r\n\r\nconst StreamChatApp = () => (\r\n  <Chat client={chatClient} theme='messaging light'>\r\n    <Channel channel={channel}>\r\n      <Window>\r\n        <ChannelHeader />\r\n        <MessageList />\r\n        <MessageInput />\r\n      </Window>\r\n      <Thread />\r\n    </Channel>\r\n  </Chat>\r\n);\r\n\r\nexport default StreamChatApp;","import React from \"react\";\nimport Login from './Login'\nimport ChatEngineIO from './ChatEngine';\nimport StreamChatApp from './StreamChatApp';\n\nconst App = () => {\n  if(!localStorage.getItem('username')) return <Login />\n  const logout = (e) => {\n    localStorage.removeItem('username');\n    localStorage.removeItem('password');\n    window.location.href = \"/\";\n  }\n  let component = JSON.parse(localStorage.getItem('component'));\n  console.log(component);\n  \n  if(component === 0) {\n    return <>\n        <button onClick={logout}>Logout</button>\n        <ChatEngineIO />\n      </>\n  } else if(component === 1) {\n    return <>\n        <button onClick={logout}>Logout</button>\n        <StreamChatApp />\n      </>\n  } else if(component === 2) {\n\n  } else if(component === 3) {\n\n  } else {\n    return(\n      <h3>\n        Page not found!\n      </h3>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
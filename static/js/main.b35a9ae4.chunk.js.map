{"version":3,"sources":["components/App.js","index.js"],"names":["App","cameraOptions","document","querySelector","video","console","log","navigator","getElementById","addEventListener","e","mediaDevices","getUserMedia","updatedConstraints","groupId","exact","target","value","startStream","getCameraSelection","a","enumerateDevices","devices","videoDevices","filter","device","kind","options","optionsArr","map","videoDevice","index","label","length","deviceId","concat","innerHTML","join","constraints","stream","handleStream","srcObject","ReactDOM","render","StrictMode"],"mappings":"oQAgIeA,EAzHH,WA8DV,IAAMC,EAAgBC,SAASC,cAAc,yBACvCC,EAAQF,SAASC,cAAc,SACrCE,QAAQC,IAAIC,WAaZL,SAASM,eAAe,iBAAiBC,iBAAiB,UAZrC,SAACC,GAEpB,GADAL,QAAQC,IAAII,GACR,iBAAkBH,WAAaA,UAAUI,aAAaC,aAAc,CAGtE,IAAIC,EAAqB,CAAET,MAAO,CAAEU,QAAS,CAAEC,MAAQL,GAAKA,EAAEM,OAAUN,EAAEM,OAAOC,MAAQ,MAEzFZ,QAAQC,IAAIO,GACZK,EAAYL,OAMhB,IAAMM,EAAkB,uCAAG,kCAAAC,EAAA,sEACHb,UAAUI,aAAaU,mBADpB,OACnBC,EADmB,OAErBC,EAAeD,EAAQE,QAAO,SAAAC,GAAM,MAAoB,eAAhBA,EAAOC,QACnDrB,QAAQC,IAAIiB,GACRI,EAAU,CAAC,2CACXC,EAAaL,EAAaM,KAAI,SAACC,EAAaC,GAC9C,IAAIC,EAAQ,UAAYD,EAAQ,EACC,IAA7BD,EAAYE,MAAMC,SACpBD,EAAQF,EAAYE,OAEtB,IAAIf,EAAQ,GAQZ,OANEA,EADkC,IAAhCa,EAAYI,SAASD,OACfH,EAAYhB,QAEZgB,EAAYI,SAIhB,kBAAN,OAAyBjB,EAAzB,aAAmCe,EAAnC,gBAEFL,EAAUA,EAAQQ,OAAOP,GACzBvB,QAAQC,IAAIqB,GACZ1B,EAAcmC,UAAYT,EAAQU,KAAK,IAtBd,4CAAH,qDAyBlBnB,EAAW,uCAAG,WAAOoB,GAAP,eAAAlB,EAAA,sEACGb,UAAUI,aAAaC,aAAa0B,GADvC,OACZC,EADY,OAElBlC,QAAQC,IAAIiC,GACZC,EAAaD,GAHK,2CAAH,sDAMXC,EAAe,SAACD,GACpBnC,EAAMqC,UAAYF,GAKpB,OAFApB,IAEO,8B,MC/GLuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1C,SAASM,eAAe,W","file":"static/js/main.b35a9ae4.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n\nimport 'react-chat-widget/lib/styles.css';\n\nimport \"../components/styles.css\"\n\nconst App = () => {\n\n\n\n  // if(!localStorage.getItem('username')) return <Login />\n  // const logout = (e) => {\n  //   CometChat.logout();\n  //   localStorage.clear();\n  //   window.location.href = \"/2-way-messaging-demo\";\n  // }\n  // let component = JSON.parse(localStorage.getItem('component'));\n  // console.log(component);\n\n  // if(component === 0) {\n  //   return <>\n  //       <button className=\"logoutBtn\" onClick={logout}>Logout</button>\n  //       <ChatEngineIO />\n  //     </>\n  // } else if(component === 1) {\n  //   return <>\n  //       <button className=\"logoutBtn\" onClick={logout}>Logout</button>\n  //       <StreamChatApp />\n  //     </>\n  // } else if(component === 2) {\n  //   return <>\n  //       <button className=\"logoutBtn\" onClick={logout}>Logout</button>\n  //       <ChatElements />\n  //     </>\n  // } else if(component === 3) {\n  //   return <>\n  //       <button className=\"logoutBtn\" onClick={logout}>Logout</button>\n  //       <ChatUIKit />\n  //     </>\n  // } else if(component === 4) {\n  //   return <>\n  //       <button className=\"logoutBtn\" onClick={logout}>Logout</button>\n  //       <Widget />\n  //     </>\n  // } else if(component === 5) {\n  //   return <>\n  //       <button className=\"logoutBtn\" onClick={logout}>Logout</button>\n  //       <div style={{height: '95vh'}}>\n  //         <CometChatUI />\n  //       </div>\n  //     </>\n  // } else if(component === 6) {\n  //   return <>\n  //       <button className=\"logoutBtn\" onClick={logout}>Logout</button>\n  //       <div style={{height: '95vh'}}>\n  //         {/* <ConversationalUI /> */}\n  //       </div>\n  //     </>\n  // } else {\n  //   return(\n  //     <h3>\n  //       Page not found!\n  //     </h3>\n  //   )\n  // }\n\n  // feather.replace();\n\n  const cameraOptions = document.querySelector('.video-options>select');\n  const video = document.querySelector('video');\n  console.log(navigator);\n  const cameraChange = (e) => {\n    console.log(e);\n    if ('mediaDevices' in navigator && navigator.mediaDevices.getUserMedia) {\n      // let updatedConstraints = { video: { deviceId: { exact: (e && e.target) ? e.target.value : \"\" } } }\n      // if (navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform)) {\n      let updatedConstraints = { video: { groupId: { exact: (e && e.target) ? e.target.value : \"\" } } }\n      // }\n      console.log(updatedConstraints);\n      startStream(updatedConstraints);\n    }\n  }\n\n  document.getElementById(\"camera-select\").addEventListener(\"change\", cameraChange);\n\n  const getCameraSelection = async () => {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    let videoDevices = devices.filter(device => device.kind === 'videoinput');\n    console.log(videoDevices);\n    let options = [\"<option value=''>Select camera</option>\"];\n    let optionsArr = videoDevices.map((videoDevice, index) => {\n      let label = \"Camera-\" + index + 1;\n      if (videoDevice.label.length !== 0) {\n        label = videoDevice.label;\n      }\n      let value = \"\";\n      if (videoDevice.deviceId.length === 0) {\n        value = videoDevice.groupId;\n      } else {\n        value = videoDevice.deviceId;\n      }\n      /* if (navigator.platform && /iPad|iPhone|iPod|Mac/.test(navigator.platform)) {\n      } */\n      return `<option value=\"${value}\">${label}</option>`;\n    });\n    options = options.concat(optionsArr);\n    console.log(options);\n    cameraOptions.innerHTML = options.join('');\n  };\n\n  const startStream = async (constraints) => {\n    const stream = await navigator.mediaDevices.getUserMedia(constraints);\n    console.log(stream);\n    handleStream(stream);\n  };\n\n  const handleStream = (stream) => {\n    video.srcObject = stream;\n  };\n\n  getCameraSelection();\n\n  return <>\n\n  </>\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { CometChat } from '@cometchat-pro/chat';\n\n/*const  appID = \"206755d635dd6b0c\";\nconst region = \"us\";\nconst appSetting = new CometChat.AppSettingsBuilder().subscribePresenceForAllUsers().setRegion(region).build();\nCometChat.init(appID, appSetting).then(\n  () => {\n    console. log(\"Initialization completed successfully\"); */\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n      document.getElementById('root')\n    );\n  /*},\n  error => {\n    console.log(\"Initialization failed with error:\", error);\n  }\n); */"],"sourceRoot":""}